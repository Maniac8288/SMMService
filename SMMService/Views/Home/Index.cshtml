@model SMM.Web.Models.ViewModels.HomeModel
@using Newtonsoft.Json
@section Scripts {
    <script src="~/asserts/js/Forms/Project/Group/GroupModel.js"></script>
    <script src="~/asserts/js/Forms/Project/ProjectModel.js"></script>
    <script src="~/asserts/js/Forms/Home/HomeViewModel.js"></script>
    <script>
        var urlSetGroup = '@Url.Action("SetGroup","Project")';

        var params = {};
        params.UrlCreateProject = '@Url.Action("CreateProject","Project")';
        params.UrlProject = '@Url.Action("Settings", "Client")';
        params.Projects =  @Html.Raw(JsonConvert.SerializeObject(Model.Projects));
        params.Groups =  @Html.Raw(JsonConvert.SerializeObject(Model.Groups));
        params.UrlCreateGroup = '@Url.Action("CreateGroup","Home")';
        var ViewModel = new Home.HomeViewModel(params);
    </script>
}
<div class="container body-content">

    <div class="menu-list">
        <div class="item">
            <a class="blue-btn" data-toggle="modal" data-target="#addProject">
                Добавить проект
            </a>
            <a class="blue-btn" data-toggle="modal" data-target="#addGroup">
                Добавить группу
            </a>
        </div>
        <div class="filter-clients item">
            <i class="icon icon-squad" data-bind="click:ViewModel.TypeFilter.bind($data,'squad')"></i>
            <i class="icon icon-row" data-bind="click:ViewModel.TypeFilter.bind($data,'row')"></i>

        </div>
    </div>
    <!--ko if:ViewModel.TypeFilter() === 'squad'-->
    @Html.Partial("~/Views/Home/Partial/_SquadProjects.cshtml")
    <!--/ko-->
    <!--ko if:ViewModel.TypeFilter() === 'row'-->
    @Html.Partial("~/Views/Home/Partial/_RowProjects.cshtml")
    <!--/ko-->
</div>

<!--Модальные окна-->
<!--Добавить проект-->
@Html.Partial("~/Views/Home/Popup/_AddProject.cshtml")

<!--Добавить группу-->
@Html.Partial("~/Views/Home/Popup/_AddGroup.cshtml")

<!--Конец модальных окн-->